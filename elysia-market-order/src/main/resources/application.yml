server:
  port: 8001
  servlet:
    context-path: /market-order
spring:
  application:
    name: elysia-market-order-service
  profiles:
    default: local
  datasource:
    url: jdbc:mysql://${elysia.db.host}/elysia
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${elysia.db.username}
    password: ${elysia.db.password}
  cloud:
    nacos:
      server-addr: ${elysia.nacos.host}
      discovery:
        username: ${elysia.nacos.username}
        password: ${elysia.nacos.password}
        namespace: public
        ephemeral: true #nacos注册服务提供方设置为非临时实例
    sentinel:
      transport:
        dashboard: localhost:8080 #配置Sentinel dashboard地址
        port: 8719 #默认8719端口，检测被占用会自动在默认端口上+1（8719+1=8720），直至找到未被占用的端口为止
      web-context-unify: false #配置为false即可根据不同的URL进行链路限流，如果不配置将不会生效
      flow:
        coldFactor: 3
#消费者微服务名称（Nacos服务名）
service-url:
  nacos-user-service: http://elysia-market-stock-service
#日志监控的指定接口输出级别设置
logging:
  level:
    com.elysia.market.api.order.StockTestService: debug
# 激活Sentinel对OpenFeign的支持
feign:
  sentinel:
    enabled: true
# 激活Sentinel对RestTemplate的支持
resttemplate:
  sentinel:
    enabled: true
# rocketmq配置
rocketmq:
  name-server: localhost:9876
  producer:
    group: elysia-market-order-producer
  consumer:
    group: elysia-market-order-consumer
management:
  endpoint:
    web:
      exposure:
        include: '*'
